name: Helm Umbrella Chart Deploy
description: Deploy a helm umbrella chart with configMap checksum generation and optional config map and chart values file transformations
inputs:
  release:
    description: Helm release name
    required: true
  namespace:
    description: Kubernetes namespace name
    required: true
  chart:
    description: Helm chart path
    required: true
  values:
    description: Helm chart values as a list of key-value pairs
    required: false
  app-version:
    description: The application version that helm will install. If not supplied, the application version will be whatever is already defined in Chart.yaml
    required: false
  options:
    description: 'Options to pass to the helm upgrade command. Defaults to `--atomic --cleanup-on-fail`'
    required: false
    default: --atomic --cleanup-on-fail
  config-maps:
    description: |
      List of chartname=filepath pairs that will be used as configMaps
      Each file will transformed (optional) and then the content used to generate a checksum environment variable 
      Example:
      web=FrontEnd/settings.js
      sample-api=Sample.Api/appsettings.json
      Results in environment variables `Checksum_Web` and `Checksum_Sample_Api` whose value is the checksum of the
      files 'FrontEnd/settings.js' and 'Sample.Api/appsettings.json' respectively located in the helm chart directory
    required: false
  enable-file-transform:
    description: Perform file transformation on the configMap files and helm chart values.yaml file (default true)?
    required: false
    default: 'true'
  add-bitnami-repo:
    description: Register the 'https://charts.bitnami.com/bitnami' repo?
    required: false
  enable-show-k8-errors:
    description: Output the logs of kubernetes error events where the helm chart install/upgrade fails?
    required: false
    default: 'true'
    
runs:
  using: composite
  steps:     
    - name: Set variables
      id: vars
      shell: pwsh
      run: ${{ github.action_path }}/set-vars.ps1 -ChartPath '${{ inputs.chart }}' -ConfigMaps '${{ inputs.config-maps }}' -Values '${{ inputs.values }}' -AppVersion '${{ inputs.app-version }}'
        
    - name: Simple env variable substitution in config maps
      if: ${{ inputs.enable-file-transform == 'true' && steps.vars.outputs.simpleFileTransformPaths != '' }}
      uses: chris-peterson/virgo@9f282114344c9b3afad492bf5ea12630c47e8972 # <- v1
      with:
        templates: '${{ steps.vars.outputs.simpleFileTransformPaths }}'

    - name: Structured file substitution in config maps
      if: ${{ inputs.enable-file-transform == 'true' && steps.vars.outputs.structuredFileTransformPaths != '' }}
      uses: joshlrogers/variable-substitution@602057bea9ec150e2142bbae25ed9a64da175569 # <- v1.1.5
      with:
        files: '${{ steps.vars.outputs.structuredFileTransformPaths }}'
        splitChar: '_'
        
    - name: Set checksum variables
      if: ${{ inputs.enable-file-transform == 'true' }}
      shell: pwsh
      run: |
        . ${{ github.action_path }}/Get-ConfigMapInfo.ps1
        Get-ConfigMapInfo -ChartPath '${{ inputs.chart }}' -ConfigMaps '${{ inputs.config-maps }}' | ForEach-Object {
          $fileHash = (Get-FileHash ($_.FilePath)).Hash
          "Checksum_$($_.Key)=$fileHash" >> $Env:GITHUB_ENV
        }
        
    # Note: checksum env variables set... we're now able to perform file substitution on values.yaml
    - name: Simple env variable substitution in values.yaml
      if: ${{ inputs.enable-file-transform == 'true' }}
      uses: chris-peterson/virgo@9f282114344c9b3afad492bf5ea12630c47e8972 # <- v1
      with:
        templates: '${{ steps.vars.outputs.helmValuesPath }}'
    - name: Structured file substitution in values.yaml
      if: ${{ inputs.enable-file-transform == 'true' }}
      uses: joshlrogers/variable-substitution@602057bea9ec150e2142bbae25ed9a64da175569 # <- v1.1.5
      with:
        files: '${{ steps.vars.outputs.helmValuesPath }}'
        splitChar: '_'
        
    - name: Add bitnami helm repo
      if: ${{ inputs.add-bitnami-repo == 'true' }}
      shell: bash
      run: helm repo add bitnami https://charts.bitnami.com/bitnami
      
    - name: Build helm chart dependencies
      shell: bash
      run: helm dependency --namespace ${{ inputs.namespace }} build '${{ inputs.chart }}'
      
    - name: Show helm manifest
      shell: bash
      run: helm template --namespace ${{ inputs.namespace }} ${{ inputs.release }} '${{ inputs.chart }}' ${{ steps.vars.outputs.helmSetArgs }} --debug
        
    - name: Package chart
      shell: bash
      run: helm package '${{ inputs.chart }}' -d '${{ inputs.chart }}' --app-version ${{ steps.vars.outputs.appVersion }}

    - name: Install helm chart
      id: install
      shell: bash
      run: helm upgrade ${{ inputs.release }} --namespace ${{ inputs.namespace }} --install ${{ inputs.options }} ${{ steps.vars.outputs.helmSetArgs }} '${{ steps.vars.outputs.chartPackagePath }}'
      
    - name: Show aks error events
      if: ${{ failure() && steps.install.conclusion == 'failure' && inputs.enable-show-k8-errors == 'true' }}
      shell: bash
      run: kubectl get events --field-selector type!=Normal --namespace=${{ inputs.namespace }}