name: Azure Container Apps Create Revision
description: Create a new revision of an existing Azure Container App
inputs:
  containerAppName:
    description: The name of the Container App to create a revision for
    required: true
  envVars:
    description: |
      A multi-line input of key-value pairs to include in the deployment of the new revision. Use the format Key=Value 
      with a new-line to separate each environment variable
    required: false
  envVarsSelector:
    description: |
      A comma separated list of environment variables to include in the deployment of the new revision. Use the format
      Env:VariableName to include an environment variable. Use the wildcard character (*) to match environment variables
      that start with a specific string. For example, Env:Api_* will match all environment variables that start with Api_.
      Note: selected environment variables will be merged with the provided envVars input and take precedence over any 
      environment variables with the same key in the envVars list
    required: false
  envVarKeyTransform:
    description: |
      Define a transformation to apply to the environment variable keys. Use the format "search=>replace" to replace all 
      instances of search with replace in the environment variable keys. For example, _=>__ will replace all underscores 
      with double underscores in the environment variable keys
    required: false
  envVarMetadataKeyName:
    description: |
      The name of the environment variable that will be used to store the keys of the environment variables that are
      included in the deployment of the new revision. This list will be used to diff against the environment variables
      in the next deployment to determine which are obsolete and should be removed from the deployment of the new revision.
      This diffing process is used to allow for other environment variables to be added to the container app, for example
      by infrastructure as code, without needing to include them in the deployment here
    required: false
    default: __DeployMetadata__AppVarKeys
  healthRequestPath:
    description: |
      The path to use when checking the health of the new revision. Default: /health
    required: false
    default: /health
  imageToDeploy:
    description: The full image name to deploy, including the registry and tag
    required: true
  logAppRevisionCommand:
    description: Log the command used to create the new revision?
    required: false
  resourceGroup:
    description: The name of the resource group that contains the container app
    required: true
  testRevision:
    description: |
      If set to true, the action will wait for the new revision to successfully respond to a GET request at the configured 
      health path
    required: false
    
runs:
  using: composite
  steps:
    - name: Create Azure container app revision
      shell: pwsh
      run: |
        $envVarsObject = "${{ inputs.envVars }}" | ConvertFrom-StringData
        $params = @{
          Name = '${{ inputs.containerAppName }}'
          ResourceGroup = '${{ inputs.resourceGroup }}'
          Image = '${{ inputs.imageToDeploy }}'
          EnvVarsObject = $envVarsObject
          EnvVarsSelector = '${{ inputs.envVarsSelector }}'
          EnvVarKeyTransformString = '${{ inputs.envVarKeyTransform }}'
          EnvVarMetadataKeyName = '${{ inputs.envVarMetadataKeyName }}'
          HealthRequestPath = '${{ inputs.healthRequestPath }}'
          ShowAppRevisionCommand = '${{ inputs.logAppRevisionCommand }}' -eq 'true'
          TestRevision = '${{ inputs.testRevision }}' -eq 'true'
        }
        ${{ github.action_path }}/create-aca-revision.ps1 @params -InfA Continue
