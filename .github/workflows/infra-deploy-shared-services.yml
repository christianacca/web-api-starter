name: Infrastructure Deploy Shared Services

on:
  workflow_dispatch:
    inputs:
      environment-name:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - demo
          - staging
          - prod-na
          - prod-emea
          - prod-apac
      create-shared-container-registry:
        description: |
          Create shared container registry? Note: the environment selected should be appropriate for the shared container registry. 
          So for example, pick 'prod-na' for a container registry intended to be shared by production environments, and 'dev' for dev/test 
          shared container registry. Where a single container registry is shared by both production and non-production environments, 
          pick 'prod-na'
        default: false
        required: false
        type: boolean
      create-shared-key-vault:
        description: |
          Create shared azure key vault? Note: the environment selected should be appropriate for the shared key vault.
          So for example, pick 'prod-na' for a key vault intended to be shared by production environments, and 'dev'
          for dev/test shared key vault. Where a single key vault is shared by both production and non-production 
          environments, pick 'prod-na'
        default: false
        required: false
        type: boolean
      grant-rbac-management:
        description: |
          Grant RBAC management permission to provisioning service principals? Note: environment selected must be 'prod-na'
        default: false
        required: false
        type: boolean

permissions:
  actions: read
  contents: read
  id-token: write

jobs:
  approval-context:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 # need to checkout so that our custom action is available
      - uses: ./.github/actions/gh-context

  run:
    concurrency: infra-deploy-shared-services_${{ inputs.environment-name }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment-name }}
    steps:
      - uses: actions/checkout@v4
        
      - name: Set powershell module list
        shell: pwsh
        run: |
          $list = ./tools/infrastructure/provision-shared-services.ps1 -ListModuleRequirementsOnly
          "PS_MODULE_LIST=$list" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

      - name: 'Install dependent powershell modules'
        uses: potatoqualitee/psmodulecache@ee5e9494714abf56f6efbfa51527b2aec5c761b8 # <- v6.2.1
        with:
          modules-to-cache: ${{ env.PS_MODULE_LIST }}

      - name: Azure login
        uses: ./.github/actions/azure-login
        with:
          enable-AzPSSession: true
          github-environment: ${{ github.event.inputs.environment-name }}

      - name: 'Provision infrastructure'
        shell: pwsh
        run: |
          $parmas = @{
            EnvironmentName                 = '${{ github.event.inputs.environment-name }}'
            CreateSharedContainerRegistry   = $${{ github.event.inputs.create-shared-container-registry }}
            CreateSharedKeyVault            = $${{ github.event.inputs.create-shared-key-vault }}
            GrantRbacManagement             = $${{ github.event.inputs.grant-rbac-management }}
            SkipInstallModules              = $true
          }
          ./tools/infrastructure/provision-shared-services.ps1 @parmas -InfA Continue