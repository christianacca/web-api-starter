name: Infrastructure Deploy Shared Services

on:
  workflow_dispatch:
    inputs:
      environment-type:
        description: 'Environment type that will determine the shared services deployed'
        required: true
        default: prod
        type: choice
        options:
          - dev/test
          - prod

permissions:
  actions: read
  contents: read
  id-token: write

jobs:
  approval-context:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 # need to checkout so that our custom action is available
      - uses: ./.github/actions/gh-context

  setup:
    needs: approval-context
    runs-on: ubuntu-latest
    outputs:
      environment-name: ${{ steps.setup-env-name.outputs.environment-name }}
    steps:
      - uses: actions/checkout@v4 # need to checkout so that our custom action is available
      - uses: ./.github/actions/export-convention-vars
        with:
          environment-name: dev
      - name: Setup Env Name
        id: setup-env-name
        run: |
          $envName = '${{ inputs.environment-type }}' -eq 'prod' ? '${{ env.Convention_DefaultProdEnvName }}' : 'dev'
          "environment-name=$envName" >> $Env:GITHUB_OUTPUT
        shell: pwsh
  
  run:
    needs: setup
    concurrency: infra-deploy-shared-services_${{ inputs.environment-type }}
    runs-on: ubuntu-latest
    environment: ${{needs.setup.outputs.environment-name}}
    steps:
      - uses: actions/checkout@v4
        
      - name: Set powershell module list
        shell: pwsh
        run: |
          $list = ./tools/infrastructure/provision-shared-services.ps1 -ListModuleRequirementsOnly
          "PS_MODULE_LIST=$list" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

      - name: Install dependent powershell modules
        uses: potatoqualitee/psmodulecache@ee5e9494714abf56f6efbfa51527b2aec5c761b8 # <- v6.2.1
        with:
          modules-to-cache: ${{ env.PS_MODULE_LIST }}

      - name: Azure login
        uses: ./.github/actions/azure-login
        with:
          enable-AzPSSession: true
          github-environment: ${{needs.setup.outputs.environment-name}}

      - name: Provision infrastructure
        shell: pwsh
        run: |
          $parmas = @{
            EnvironmentType                 = '${{ github.event.inputs.environment-type }}'
            SkipInstallModules              = $true
          }
          ./tools/infrastructure/provision-shared-services.ps1 @parmas -InfA Continue