name: __Application Deployment

on:
  workflow_call:
    inputs:
      docker-image-tag:
        required: true
        type: string
      docker-registry:
        required: true
        type: string
      environment-name:
        required: true
        type: string
      git-tag:
        required: true
        type: string

jobs:

  run:
    runs-on: ubuntu-latest
    concurrency: deploy_${{ inputs.environment-name }}
    environment: ${{ inputs.environment-name }}

    steps:
      - uses: actions/checkout@v3 # need to checkout (again) so that our custom action and deployment script is available

      - name: Download release artifacts
        uses: dsaltares/fetch-gh-release-asset@d9376dacd30fd38f49238586cd2e9295a8307f4c # <- current master (2022-07-12)
        with:
          version: 'tags/${{ inputs.git-tag }}'
          file: release.tar.gz
          target: obj/release.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract release artifacts
        run: mkdir ./out && tar -xvf ./obj/release.tar.gz -C $_

      - name: Azure login
        uses: ./.github/actions/azure-login
        with:
          github-environment: ${{ inputs.environment-name }}

      - name: Collect variables as json
        id: infravars
        shell: pwsh
        run: |
          ./tools/infrastructure/get-infrastructure-info.ps1 -EnvironmentName ${{ inputs.environment-name }} >> ./obj/infra.json
          ./tools/infrastructure/get-product-conventions.ps1 -EnvironmentName ${{ inputs.environment-name }} >> ./obj/conventions.json

      - name: Convert conventions json to vars
        uses: antifree/json-to-variables@cc8c6394031e145c90f7f9ec909d83df92431fb8 # <- v1.0.1
        with:
          filename: ./obj/conventions.json
          prefix: Convention

      - name: Convert infrastructure json to vars
        uses: antifree/json-to-variables@v1.0.1
        with:
          filename: ./obj/infra.json
          prefix: Infra

      - uses: kanga333/variable-mapper@bc402faa459bac3069f595be0dd9d635373f5e6c # <- current master (2022-07-12)
        with:
          mode: fill
          key: "${{ inputs.environment-name }}"
          map: |
            {
              "dev": {
                "Api_TokenProvider_Authority": "https://mrisaas.oktapreview.com/oauth2/default",
                "CentralIdentity_BaseUri": "https://welcome-release-internal.redmz.mrisoftware.com"
              },
              "qa": {
                "Api_TokenProvider_Authority": "https://mrisaas.oktapreview.com/oauth2/default",
                "CentralIdentity_BaseUri": "https://welcome-release-internal.redmz.mrisoftware.com"
              },
              "demo": {
                "Api_TokenProvider_Authority": "https://mrisaas.oktapreview.com/oauth2/default",
                "CentralIdentity_BaseUri": "https://welcomeci-demo.saas.mrisoftware.com"
              },
              "staging": {
                "Api_TokenProvider_Authority": "https://mrisaas.oktapreview.com/oauth2/default",
                "CentralIdentity_BaseUri": "https://welcome-ci.preprod.saas.mrisoftware.com/"
              },
              "prod-na": {
                "Api_TokenProvider_Authority": "https://mrisaas.oktapreview.com/oauth2/default",
                "CentralIdentity_BaseUri": "https://welcome-ci.saas.mrisoftware.com"
              },
              "prod-emea": {
                "Api_TokenProvider_Authority": "https://mrisaas.oktapreview.com/oauth2/default",
                "CentralIdentity_BaseUri": "https://welcomeemea-ci.saas.mrisoftware.com"
              },
              "prod-apac": {
                "Api_TokenProvider_Authority": "https://mrisaas.oktapreview.com/oauth2/default",
                "CentralIdentity_BaseUri": "https://apacwelcome-ci.saas.mrisoftware.com"
              },
              ".*": {
                "ApplicationInsights_AutoCollectActionArgs": "${{ env.Convention_IsTestEnv }}",
                "gha_step_deploy_api_envVarsSelector": "Env:Api_*,Env:ApplicationInsights_*,Env:CentralIdentity_*,Env:EnvironmentInfo_*",
                "gha_step_deploy_api_imageToDeploy": "${{ inputs.docker-registry }}/web-api-starter/api:${{ inputs.docker-image-tag }}",
                "EnvironmentInfo_EnvId": "${{ inputs.environment-name }}",
                "EnvironmentInfo_InfraVersion": "${{ env.Infra_Version }}",
                "InternalApi_Database_DataSource": "${{ env.Convention_SubProducts_Sql_Primary_DataSource }}",
                "InternalApi_Database_InitialCatalog": "${{ env.Convention_SubProducts_Db_ResourceName }}",
                "InternalApi_Database_UserID": "${{ env.Infra_InternalApi_ManagedIdentityClientId }}",
                "InternalApi_DefaultAzureCredentials_ManagedIdentityClientId": "${{ env.Infra_InternalApi_ManagedIdentityClientId }}",
                "InternalApi_KeyVaultName": "${{ env.Convention_SubProducts_KeyVault_ResourceName }}",
                "InternalApi_ReportBlobStorage_ServiceUri": "https://${{ env.Convention_SubProducts_PbiReportStorage_StorageAccountName }}.blob.core.windows.net"
              }
            }

      - name: Azure Function App (internalapi) - File substitution in appsettings
        uses: joshlrogers/variable-substitution@602057bea9ec150e2142bbae25ed9a64da175569 # <- v1.1.5
        with:
          files: ./out/Template.Functions/appsettings.json
          splitChar: '_'

      - name: Deploy SQL database migration
        uses: ./.github/actions/sql-action # <- replace with: MRI-Software/sql-action@v1
        with:
          database-name: ${{ env.Convention_SubProducts_Db_ResourceName }}
          server-name: ${{ env.Convention_SubProducts_Sql_Primary_ResourceName }}
          sql-file: ./out/migrate-db.sql

      - name: Deploy API (primary region)
        uses: ./.github/actions/container-apps-create-revision # <- replace with MRI-Software/container-apps-create-revision@v1
        with:
          containerAppName: ${{ env.Convention_SubProducts_Api_Primary_ResourceName }}
          envVarsSelector: ${{ env.gha_step_deploy_api_envVarsSelector }}
          envVarKeyTransform: _=>__
          healthRequestPath: ${{ env.Convention_SubProducts_Api_DefaultHealthPath }}
          imageToDeploy: ${{ env.gha_step_deploy_api_imageToDeploy }}
          resourceGroup: ${{ env.Convention_AppResourceGroup_ResourceName }}
          testRevision: true

      - name: Deploy API (failover region)
        if: ${{ env.Convention_SubProducts_Api_Failover_ResourceName != null }}
        uses: ./.github/actions/container-apps-create-revision # <- replace with MRI-Software/container-apps-create-revision@v1
        with:
          containerAppName: ${{ env.Convention_SubProducts_Api_Failover_ResourceName }}
          envVarsSelector: ${{ env.gha_step_deploy_api_envVarsSelector }}
          envVarKeyTransform: _=>__
          healthRequestPath: ${{ env.Convention_SubProducts_Api_DefaultHealthPath }}
          imageToDeploy: ${{ env.gha_step_deploy_api_imageToDeploy }}
          resourceGroup: ${{ env.Convention_AppResourceGroup_ResourceName }}
          testRevision: true

      - name: Azure Function App (internalapi) - Deploy
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.Convention_SubProducts_InternalApi_ResourceName }}
          package: ./out/Template.Functions
