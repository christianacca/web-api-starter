{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "alertEmailCritical": {
      "type": "string",
      "metadata": {
        "Description": "Email address to send notification of critical alerts"
      }
    },
    "alertEmailNonCritical": {
      "type": "string",
      "metadata": {
        "Description": "Email address to send notification of non-critical alerts"
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[concat('appi-', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Name of Application Insights resource."
      }
    },
    "appName": {
      "type": "string",
      "metadata": {
        "Description": "The name of the application whose alerts are being generated. EG 'platform-x'"
      }
    },
    "enableMetricAlerts": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable metric based alerts?"
      }
    },
    "environmentAbbreviation": {
      "type": "string",
      "maxLength": 6,
      "metadata": {
        "Description": "A short abbreviation (max 6 characters) for the environment name for the application, EG 'emea'"
      }
    },
    "environmentName": {
      "type": "string",
      "metadata": {
        "Description": "The environment name for the application, EG 'prod-emea'"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specify the log analytics workspace and related components."
      }
    },
    "retentionInDays": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "Specify the number of days to retain data."
      }
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "[concat('log-', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Specify the name of the log analytics workspace."
      }
    },
    "workspaceSku": {
      "type": "string",
      "defaultValue": "PerGB2018",
      "allowedValues": [
        "CapacityReservation",
        "Free",
        "LACluster",
        "PerGB2018",
        "PerNode",
        "Premium",
        "Standalone",
        "Standard"
      ],
      "metadata": {
        "description": "Specify the pricing tier: PerGB2018 or legacy tiers (Free, Standalone, PerNode, Standard or Premium) which are not available to all customers."
      }
    }
  },
  "variables": {
    "appInsightsResourceId": "[resourceId('microsoft.insights/components', parameters('appInsightsName'))]",
    "requestPerformanceDegradationDetectorRuleName": "[concat('Response Latency Degradation - ', parameters('appInsightsName'))]",
    "dependencyPerformanceDegradationDetectorRuleName": "[concat('Dependency Latency Degradation - ', parameters('appInsightsName'))]",
    "traceSeverityDetectorRuleName": "[concat('Trace Severity Degradation - ', parameters('appInsightsName'))]",
    "exceptionVolumeChangedDetectorRuleName": "[concat('Exception Anomalies - ', parameters('appInsightsName'))]",
    "memoryLeakRuleName": "[concat('Potential Memory Leak - ', parameters('appInsightsName'))]",
    "failureAnomaliesRuleName": "[concat('Failure Anomalies - ', parameters('appInsightsName'))]",
    "actionGroupNamePrefix": "[concat(parameters('appName'), '-', parameters('environmentName'))]",
    "nonCriticalActionGroupName": "[concat(variables('actionGroupNamePrefix'), '-non-critical')]",
    "nonCriticalActionGroupId": "[resourceId('microsoft.insights/actionGroups', variables('nonCriticalActionGroupName'))]",
    "criticalActionGroupName": "[concat(variables('actionGroupNamePrefix'), '-critical')]",
    "criticalActionGroupId": "[resourceId('microsoft.insights/actionGroups', variables('criticalActionGroupName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-12-01-preview",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[parameters('workspaceSku')]"
        },
        "retentionInDays": "[parameters('retentionInDays')]",
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        },
        "workspaceCapping": {
          "dailyQuotaGb": 3
        },
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaceName'))]"
      ],
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "CustomDeployment",
        "RetentionInDays": 90,
        "WorkspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaceName'))]",
        "IngestionMode": "LogAnalytics",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.AlertsManagement/smartdetectoralertrules",
      "apiVersion": "2019-03-01",
      "name": "[variables('requestPerformanceDegradationDetectorRuleName')]",
      "location": "global",
      "dependsOn": [
        "[variables('appInsightsResourceId')]"
      ],
      "properties": {
        "description": "Response Latency Degradation notifies you of an unusual increase in latency in your app response to requests.",
        "state": "Enabled",
        "severity": "Sev3",
        "frequency": "PT24H",
        "detector": {
          "id": "RequestPerformanceDegradationDetector"
        },
        "scope": [
          "[variables('appInsightsResourceId')]"
        ],
        "actionGroups": {
          "groupIds": []
        }
      }
    },
    {
      "type": "Microsoft.AlertsManagement/smartdetectoralertrules",
      "apiVersion": "2019-03-01",
      "name": "[variables('dependencyPerformanceDegradationDetectorRuleName')]",
      "location": "global",
      "dependsOn": [
        "[variables('appInsightsResourceId')]"
      ],
      "properties": {
        "description": "Dependency Latency Degradation notifies you of an unusual increase in response by a dependency your app is calling (e.g. REST API or database)",
        "state": "Enabled",
        "severity": "Sev3",
        "frequency": "PT24H",
        "detector": {
          "id": "DependencyPerformanceDegradationDetector"
        },
        "scope": [
          "[variables('appInsightsResourceId')]"
        ],
        "actionGroups": {
          "groupIds": []
        }
      }
    },
    {
      "type": "Microsoft.AlertsManagement/smartdetectoralertrules",
      "apiVersion": "2019-03-01",
      "name": "[variables('traceSeverityDetectorRuleName')]",
      "location": "global",
      "dependsOn": [
        "[variables('appInsightsResourceId')]"
      ],
      "properties": {
        "description": "Trace Severity Degradation notifies you of an unusual increase in the severity of the traces generated by your app.",
        "state": "Enabled",
        "severity": "Sev3",
        "frequency": "PT24H",
        "detector": {
          "id": "TraceSeverityDetector"
        },
        "scope": [
          "[variables('appInsightsResourceId')]"
        ],
        "actionGroups": {
          "groupIds": []
        }
      }
    },
    {
      "type": "Microsoft.AlertsManagement/smartdetectoralertrules",
      "apiVersion": "2019-03-01",
      "name": "[variables('exceptionVolumeChangedDetectorRuleName')]",
      "location": "global",
      "dependsOn": [
        "[variables('appInsightsResourceId')]"
      ],
      "properties": {
        "description": "Exception Anomalies notifies you of an unusual rise in the rate of exceptions thrown by your app.",
        "state": "Enabled",
        "severity": "Sev3",
        "frequency": "PT24H",
        "detector": {
          "id": "ExceptionVolumeChangedDetector"
        },
        "scope": [
          "[variables('appInsightsResourceId')]"
        ],
        "actionGroups": {
          "groupIds": []
        }
      }
    },
    {
      "type": "Microsoft.AlertsManagement/smartdetectoralertrules",
      "apiVersion": "2019-03-01",
      "name": "[variables('memoryLeakRuleName')]",
      "location": "global",
      "dependsOn": [
        "[variables('appInsightsResourceId')]"
      ],
      "properties": {
        "description": "Potential Memory Leak notifies you of increased memory consumption pattern by your app which may indicate a potential memory leak.",
        "state": "Enabled",
        "severity": "Sev3",
        "frequency": "PT24H",
        "detector": {
          "id": "MemoryLeakDetector"
        },
        "scope": [
          "[variables('appInsightsResourceId')]"
        ],
        "actionGroups": {
          "groupIds": []
        }
      }
    },
    {
      "type": "Microsoft.AlertsManagement/smartdetectoralertrules",
      "apiVersion": "2019-03-01",
      "name": "[variables('failureAnomaliesRuleName')]",
      "location": "global",
      "dependsOn": [
        "[variables('appInsightsResourceId')]"
      ],
      "properties": {
        "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
        "state": "Enabled",
        "severity": "Sev3",
        "frequency": "PT1M",
        "detector": {
          "id": "FailureAnomaliesDetector"
        },
        "scope": [
          "[variables('appInsightsResourceId')]"
        ],
        "actionGroups": {
          "groupIds": []
        }
      }
    },
    {
      "type": "Microsoft.Insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('appInsightsName'),'/migrationToAlertRulesCompleted')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.AlertsManagement/smartdetectoralertrules', variables('requestPerformanceDegradationDetectorRuleName'))]",
        "[resourceId('Microsoft.AlertsManagement/smartdetectoralertrules', variables('dependencyPerformanceDegradationDetectorRuleName'))]",
        "[resourceId('Microsoft.AlertsManagement/smartdetectoralertrules', variables('traceSeverityDetectorRuleName'))]",
        "[resourceId('Microsoft.AlertsManagement/smartdetectoralertrules', variables('exceptionVolumeChangedDetectorRuleName'))]",
        "[resourceId('Microsoft.AlertsManagement/smartdetectoralertrules', variables('memoryLeakRuleName'))]"
      ],
      "properties": {
        "name": "migrationToAlertRulesCompleted",
        "sendEmailsToSubscriptionOwners": false,
        "customEmails": [],
        "enabled": true
      }
    },
    {
      "type": "microsoft.insights/actionGroups",
      "apiVersion": "2019-06-01",
      "name": "[variables('nonCriticalActionGroupName')]",
      "location": "Global",
      "properties": {
        "groupShortName": "[concat(toUpper(parameters('environmentAbbreviation')), '-NCRIT')]",
        "enabled": true,
        "emailReceivers": [
          {
            "name": "Primary Email Notification_-EmailAction-",
            "emailAddress": "[parameters('alertEmailNonCritical')]",
            "useCommonAlertSchema": true
          }
        ],
        "smsReceivers": [],
        "webhookReceivers": [],
        "itsmReceivers": [],
        "azureAppPushReceivers": [],
        "automationRunbookReceivers": [],
        "voiceReceivers": [],
        "logicAppReceivers": [],
        "azureFunctionReceivers": [],
        "armRoleReceivers": []
      }
    },
    {
      "type": "microsoft.insights/actionGroups",
      "apiVersion": "2019-06-01",
      "name": "[variables('criticalActionGroupName')]",
      "location": "Global",
      "properties": {
        "groupShortName": "[concat(toUpper(parameters('environmentAbbreviation')), '-CRIT')]",
        "enabled": true,
        "emailReceivers": [
          {
            "name": "Primary Email Notification_-EmailAction-",
            "emailAddress": "[parameters('alertEmailCritical')]",
            "useCommonAlertSchema": true
          }
        ],
        "smsReceivers": [],
        "webhookReceivers": [],
        "itsmReceivers": [],
        "azureAppPushReceivers": [],
        "automationRunbookReceivers": [],
        "voiceReceivers": [],
        "logicAppReceivers": [],
        "azureFunctionReceivers": [],
        "armRoleReceivers": []
      }
    },
    {
      "type": "Microsoft.AlertsManagement/actionRules",
      "apiVersion": "2021-08-08",
      "name": "[variables('criticalActionGroupName')]",
      "location": "global",
      "dependsOn": [
        "[variables('criticalActionGroupId')]",
        "[variables('appInsightsResourceId')]"
      ],
      "properties": {
        "scopes": [
          "[variables('appInsightsResourceId')]"
        ],
        "conditions": [
          {
            "field": "Severity",
            "operator": "Equals",
            "values": [
              "Sev0",
              "Sev1"
            ]
          }
        ],
        "enabled": true,
        "actions": [
          {
            "actionGroupIds": [
              "[variables('criticalActionGroupId')]"
            ],
            "actionType": "AddActionGroups"
          }
        ],
        "description": "[concat(parameters('appName'), ' ', parameters('environmentName'), ' critical alerts')]"
      }
    },
    {
      "type": "Microsoft.AlertsManagement/actionRules",
      "apiVersion": "2021-08-08",
      "name": "[variables('nonCriticalActionGroupName')]",
      "location": "global",
      "dependsOn": [
        "[variables('nonCriticalActionGroupId')]",
        "[variables('appInsightsResourceId')]"
      ],
      "properties": {
        "scopes": [
          "[variables('appInsightsResourceId')]"
        ],
        "conditions": [
          {
            "field": "Severity",
            "operator": "Equals",
            "values": [
              "Sev2",
              "Sev3"
            ]
          }
        ],
        "enabled": true,
        "actions": [
          {
            "actionGroupIds": [
              "[variables('nonCriticalActionGroupId')]"
            ],
            "actionType": "AddActionGroups"
          }
        ],
        "description": "[concat(parameters('appName'), ' ', parameters('environmentName'), ' non-critical alerts')]"
      }
    },
    {
      "type": "microsoft.insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[concat(parameters('appName'), '-', parameters('environmentName'), '-browser-exceptions')]",
      "location": "global",
      "dependsOn": [
        "[variables('appInsightsResourceId')]"
      ],
      "properties": {
        "description": "Alert when unhandled browser exceptions increases above previously observed behaviour",
        "severity": 1,
        "enabled": "[parameters('enableMetricAlerts')]",
        "scopes": [
          "[variables('appInsightsResourceId')]"
        ],
        "evaluationFrequency": "PT5M",
        "windowSize": "PT15M",
        "criteria": {
          "allOf": [
            {
              "alertSensitivity": "High",
              "failingPeriods": {
                "numberOfEvaluationPeriods": 4,
                "minFailingPeriodsToAlert": 2
              },
              "name": "Metric1",
              "metricNamespace": "microsoft.insights/components",
              "metricName": "exceptions/browser",
              "dimensions": [
                {
                  "name": "cloud/roleName",
                  "operator": "Include",
                  "values": [
                    "*"
                  ]
                }
              ],
              "operator": "GreaterThan",
              "timeAggregation": "Count",
              "criterionType": "DynamicThresholdCriterion"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
        },
        "autoMitigate": false,
        "actions": []
      }
    },
    {
      "type": "microsoft.insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[concat(parameters('appName'), '-', parameters('environmentName'), '-dependency-failure')]",
      "location": "global",
      "dependsOn": [
        "[variables('appInsightsResourceId')]"
      ],
      "properties": {
        "description": "Alert when dependency failures by result code increases above previously observed behaviour",
        "severity": 1,
        "enabled": "[parameters('enableMetricAlerts')]",
        "scopes": [
          "[variables('appInsightsResourceId')]"
        ],
        "evaluationFrequency": "PT5M",
        "windowSize": "PT15M",
        "criteria": {
          "allOf": [
            {
              "alertSensitivity": "Low",
              "failingPeriods": {
                "numberOfEvaluationPeriods": 4,
                "minFailingPeriodsToAlert": 2
              },
              "name": "Metric1",
              "metricNamespace": "Microsoft.Insights/components",
              "metricName": "dependencies/failed",
              "dimensions": [
                {
                  "name": "dependency/resultCode",
                  "operator": "Include",
                  "values": [
                    "*"
                  ]
                },
                {
                  "name": "cloud/roleName",
                  "operator": "Include",
                  "values": [
                    "*"
                  ]
                }
              ],
              "operator": "GreaterThan",
              "timeAggregation": "Count",
              "criterionType": "DynamicThresholdCriterion"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
        },
        "autoMitigate": true,
        "actions": []
      }
    },
    {
      "type": "microsoft.insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[concat(parameters('appName'), '-', parameters('environmentName'), '-server-exceptions')]",
      "location": "global",
      "dependsOn": [
        "[variables('appInsightsResourceId')]"
      ],
      "properties": {
        "description": "Alert when unhandled server exceptions increases above previously observed behaviour",
        "severity": 1,
        "enabled": "[parameters('enableMetricAlerts')]",
        "scopes": [
          "[variables('appInsightsResourceId')]"
        ],
        "evaluationFrequency": "PT5M",
        "windowSize": "PT15M",
        "criteria": {
          "allOf": [
            {
              "alertSensitivity": "High",
              "failingPeriods": {
                "numberOfEvaluationPeriods": 4,
                "minFailingPeriodsToAlert": 2
              },
              "name": "Metric1",
              "metricNamespace": "microsoft.insights/components",
              "metricName": "exceptions/server",
              "dimensions": [
                {
                  "name": "cloud/roleName",
                  "operator": "Include",
                  "values": [
                    "*"
                  ]
                }
              ],
              "operator": "GreaterThan",
              "timeAggregation": "Count",
              "criterionType": "DynamicThresholdCriterion"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
        },
        "autoMitigate": false,
        "actions": []
      }
    },
    {
      "type": "microsoft.insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[concat(parameters('appName'), '-', parameters('environmentName'), '-response-time')]",
      "location": "global",
      "dependsOn": [
        "[variables('appInsightsResourceId')]"
      ],
      "properties": {
        "description": "Alert when server response time increases above previously observed behaviour",
        "severity": 2,
        "enabled": "[parameters('enableMetricAlerts')]",
        "scopes": [
          "[variables('appInsightsResourceId')]"
        ],
        "evaluationFrequency": "PT5M",
        "windowSize": "PT15M",
        "criteria": {
          "allOf": [
            {
              "alertSensitivity": "Low",
              "failingPeriods": {
                "numberOfEvaluationPeriods": 4,
                "minFailingPeriodsToAlert": 2
              },
              "name": "Metric1",
              "metricNamespace": "Microsoft.Insights/components",
              "metricName": "requests/duration",
              "dimensions": [
                {
                  "name": "cloud/roleName",
                  "operator": "Include",
                  "values": [
                    "*"
                  ]
                }
              ],
              "operator": "GreaterThan",
              "timeAggregation": "Average",
              "criterionType": "DynamicThresholdCriterion"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
        },
        "autoMitigate": true,
        "actions": []
      }
    },
    {
      "type": "microsoft.insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[concat(parameters('appName'), '-', parameters('environmentName'), '-trace-error')]",
      "location": "global",
      "dependsOn": [
        "[variables('appInsightsResourceId')]"
      ],
      "properties": {
        "description": "Alert when high severity traces increases above previously observed behaviour",
        "severity": 1,
        "enabled": "[parameters('enableMetricAlerts')]",
        "scopes": [
          "[variables('appInsightsResourceId')]"
        ],
        "evaluationFrequency": "PT5M",
        "windowSize": "PT15M",
        "criteria": {
          "allOf": [
            {
              "alertSensitivity": "Medium",
              "failingPeriods": {
                "numberOfEvaluationPeriods": 4,
                "minFailingPeriodsToAlert": 2
              },
              "name": "Metric1",
              "metricNamespace": "Microsoft.Insights/components",
              "metricName": "traces/count",
              "dimensions": [
                {
                  "name": "trace/severityLevel",
                  "operator": "Include",
                  "values": [
                    "3",
                    "4"
                  ]
                },
                {
                  "name": "cloud/roleName",
                  "operator": "Include",
                  "values": [
                    "*"
                  ]
                }
              ],
              "operator": "GreaterThan",
              "timeAggregation": "Count",
              "criterionType": "DynamicThresholdCriterion"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
        },
        "autoMitigate": false,
        "actions": []
      }
    },
    {
      "type": "microsoft.insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[concat(parameters('appName'), '-', parameters('environmentName'), '-warning-traces')]",
      "location": "global",
      "dependsOn": [
        "[variables('appInsightsResourceId')]"
      ],
      "properties": {
        "description": "Alert when warning severity traces increases above previously observed behaviour",
        "severity": 2,
        "enabled": "[parameters('enableMetricAlerts')]",
        "scopes": [
          "[variables('appInsightsResourceId')]"
        ],
        "evaluationFrequency": "PT5M",
        "windowSize": "PT15M",
        "criteria": {
          "allOf": [
            {
              "alertSensitivity": "Medium",
              "failingPeriods": {
                "numberOfEvaluationPeriods": 4,
                "minFailingPeriodsToAlert": 2
              },
              "name": "Metric1",
              "metricNamespace": "Microsoft.Insights/components",
              "metricName": "traces/count",
              "dimensions": [
                {
                  "name": "trace/severityLevel",
                  "operator": "Include",
                  "values": [
                    "2"
                  ]
                },
                {
                  "name": "cloud/roleName",
                  "operator": "Include",
                  "values": [
                    "*"
                  ]
                }
              ],
              "operator": "GreaterThan",
              "timeAggregation": "Count",
              "criterionType": "DynamicThresholdCriterion"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
        },
        "autoMitigate": true,
        "actions": []
      }
    }
  ],
  "outputs": {
    "appInsightsConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]",
      "metadata": {
        "description": "The Application Insights connection string."
      }
    }
  }
}